[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Josh Yamamoto",
    "section": "",
    "text": "Hello! I’m a Mathematics & Statistics undergraduate student at Reed College. My technical interests lie in bayesian statistics, small area estimation, and statistical software, and I’m especially passionate about propagating thoughtfullness and intentionality into how we do those things."
  },
  {
    "objectID": "blog-posts/blog2.html",
    "href": "blog-posts/blog2.html",
    "title": "gamma generalized linear models",
    "section": "",
    "text": "The response can be modeled as coming from any distribution in the exponential family\nA link function that connects the linear component of our model to the response distribution. Sometimes it’s helpful for me to think of the link function as making the linear component and the response distribution “compatible”. (ex: if our model outcomes are in (0,1) then we need a link function that will map that restricted space onto the entire real line).\n\nAnd what’s often-times nice about getting to use a function like glm() is that it abstracts what goes on behind the scenes here. All you have to do is specify your formula, what distribution your response variable takes, and your data. This could be as simple as running\nglm(y ~ x, family = \"some distribution in the exponential family\", data)\nYou don’t even have to specify the link function if you don’t want, because glm() will just choose what’s called the canonical link (which I won’t get into here).\nSo maybe we are fitting a model to a response variable that’s continuous, strictly positive, and right skewed.\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\ndata %>% \n  ggplot(aes(x = x)) +\n  geom_density(fill = \"lightblue\", alpha = 0.4) +\n  theme_bw()"
  },
  {
    "objectID": "blog-posts/blog1.html",
    "href": "blog-posts/blog1.html",
    "title": "ggplot, geometry, and visualizing probability",
    "section": "",
    "text": "Let \\(X\\) and \\(Y\\) be i.i.d \\(\\text{Unif}(0,1)\\) and define a variable \\(Z = ⌊X/Y⌋\\), where \\(⌊z⌋\\) denotes the greatest integer less than or equal to \\(z\\)\nFind the probability that Z is an odd number\n\nat first glance I had absolutely no idea how to solve this problem. And even as I started to understand what the question was asking I still didn’t really know how one would go about solving it.\nI knew that the problem could be rephrased as\nFind\n\\[P(\\text{Z odd}) = P(Z = 1) + P(Z = 3) + P(Z = 5) \\ +  \\ ...\\]\nSo I figured I might as well just try to solve for these first few probabilities and see if I could find a pattern.\nIf you think about it, if \\(X,Y\\) are i.i.d \\(\\text{Unif}(0,1)\\) then we can imagine each realization of X and Y being like the x and y coordinates of a random point in the cartesian product \\([0,1] \\times [0,1]\\). And if we want to get a rough sense for the probability that \\(Z = 1\\) then we can just generate many such coordinates and then see how many of these coordinates satisfy our condition. This is a lot of words and it might still be confusing so lets make a plot. We’ll write it as a function since we’ll want to make more of these plots later on:\n\nlibrary(tidyverse)\ndata_points <- tibble(\n  x = runif(15000, 0, 1),\n  y = runif(15000, 0, 1)\n)\nfloor_plot <- function(data, z) {\n  data %>% \n    ggplot(aes(x, y , color  = (floor(x/y) == {{ z }}))) +\n    geom_point(size = 1.5) +\n    scale_color_manual(values = c(\"midnightblue\", \"cyan4\")) +\n    theme_minimal()\n}\nfloor_plot(data_points, 1)\n\n\n\n\nand so since we know that the area of the entire square is just one, then the probability that \\(Z = 1\\) can be approximated by counting what fraction of the 10,000 points that we generated is in that cyan streak. Moreover we can imagine generating infinitely many points and coloring them accordingly, and in a monte carlo fashion, say that the probability that \\(Z = 1\\) is just the area of that cyan section. And once you get to see it visually it makes sense why this is the case.\nIn order to have \\(\\lfloor X/Y \\rfloor =1\\) then we certainly need \\(X > Y\\), since otherwise the floor is zero, but if we make X too big then we end up with 2 or 3 and so on. So we require that \\(X \\ge Y\\) but also that \\(X < 2Y\\). In other words, once X gets to be twice as large as Y, then the floor is larger than 1.\nAnd if we want to find \\(P(Z = 3)\\)?\n\nfloor_plot(data_points, 3)\n\n\n\n\nand \\(P(Z = 5)\\)?\n\nfloor_plot(data_points, 5)\n\n\n\n\nand how about all odd numbers? (which is what we’re really trying to find)\n\ndata_points %>% \n  ggplot(aes(x, y, color = (floor(x/y)%%2 == 1))) +\n  geom_point(size = 1.3) +\n  scale_color_manual(values = c(\"midnightblue\", \"cyan4\")) +\n  theme_minimal()\n\n\n\n\ncool right?\nBeyond being a pretty picture, we’re also most of the way towards solving the problem. Importantly though, the main idea here is that we slowly built up an understanding of the problem by using ggplot on a few small cases.\nWe can actually solve for this probability by writing it as a sum. Recall how we said that the conditions for \\(P(Z = 1)\\) were that \\(Y \\le X < 2Y\\), well similarly, the conditions for \\(P(Z = 3)\\) are that \\(3Y \\le X < 4Y\\) and the pattern continues.\nSo we can write the sum of all these triangles as\n\\[P(\\text{Z odd}) = \\sum_{i=1}^\\infty\\frac{1}{2}\\bigg(\\frac{1}{2i-1} - \\frac{1}{2i}\\bigg) = \\frac{\\ln(2)}{2} \\approx 0.34\\]\nwhich ends up being a very nice answer! thanks ggplot"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "stats + coding thoughts",
    "section": "",
    "text": "elucidating a process that just gets hidden behind using glm()\n\n\n\n\n\n\nNov 10, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\na playful way to solve a complex probability problem\n\n\n\n\n\n\nOct 27, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "About this site"
  }
]