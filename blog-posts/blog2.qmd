---
title: "Writing your own functionals"
description: "as a way to help understand how `purrr::map()` works"
date: "11/14/22"
image: ""
---

```{r, message = F, warning = F}
library(purrr)
```


Functionals are defined as functions that take a function as input and return a vector as output. The simplest non-base R way to do this is by using a `purrr::map_*()` function. These functions simply apply the user specified function to each element in the input vector and returns an object with the same number of elements as the input.

```{r}
square <- function(x) x ^ 2
map_dbl(1:3, square)
```


We can simplify this by making use of anyonymous functions and shortcuts

```{r}
map_dbl(1:3, ~ .x ^ 2)
```

This code looks very nice and clean, but at least for me it's not immediately clear how the code works and what's happening behind the scenes 

```{r}
every2 <- function(.x, .p, ...){ 
  .p <- as_mapper(.p, ...)
  
  for (i in .x) { 
    if (!.p(i, ...)) {
      return(FALSE)
    }   
  TRUE
  }
}
```




